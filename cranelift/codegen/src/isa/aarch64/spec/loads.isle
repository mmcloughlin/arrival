;; GENERATED BY `isaspec`. DO NOT EDIT!!!

(spec
    (MInst.ULoad8 rd mem flags)
    (modifies isa_load)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 1)
                    (= (:addr isa_load) (bvadd rn rm))
                    (=
                        rd
                        (zero_ext
                            64
                            (zero_ext 32 (conv_to 8 loaded_value))))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 1)
                    (= (:addr isa_load) (bvadd rn rm))
                    (=
                        rd
                        (zero_ext
                            64
                            (zero_ext 32 (conv_to 8 loaded_value))))))))
    (require (or (RegReg? mem) (RegScaled? mem))))

(spec
    (MInst.SLoad8 rd mem flags)
    (modifies isa_load)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 1)
                    (= (:addr isa_load) (bvadd rn rm))
                    (= rd (sign_ext 64 (conv_to 8 loaded_value)))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 1)
                    (= (:addr isa_load) (bvadd rn rm))
                    (= rd (sign_ext 64 (conv_to 8 loaded_value)))))))
    (require (or (RegReg? mem) (RegScaled? mem))))

(spec
    (MInst.ULoad16 rd mem flags)
    (modifies isa_load)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 2)
                    (= (:addr isa_load) (bvadd rn rm))
                    (=
                        rd
                        (zero_ext
                            64
                            (zero_ext 32 (conv_to 16 loaded_value))))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 2)
                    (=
                        (:addr isa_load)
                        (bvadd rn (concat (extract 62 0 rm) #b0)))
                    (=
                        rd
                        (zero_ext
                            64
                            (zero_ext 32 (conv_to 16 loaded_value))))))))
    (require (or (RegReg? mem) (RegScaled? mem))))

(spec
    (MInst.SLoad16 rd mem flags)
    (modifies isa_load)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 2)
                    (= (:addr isa_load) (bvadd rn rm))
                    (= rd (sign_ext 64 (conv_to 16 loaded_value)))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 2)
                    (=
                        (:addr isa_load)
                        (bvadd rn (concat (extract 62 0 rm) #b0)))
                    (= rd (sign_ext 64 (conv_to 16 loaded_value)))))))
    (require (or (RegReg? mem) (RegScaled? mem))))

(spec
    (MInst.ULoad32 rd mem flags)
    (modifies isa_load)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 4)
                    (= (:addr isa_load) (bvadd rn rm))
                    (= rd (zero_ext 64 (conv_to 32 loaded_value)))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 4)
                    (=
                        (:addr isa_load)
                        (bvadd rn (concat (extract 61 0 rm) #b00)))
                    (= rd (zero_ext 64 (conv_to 32 loaded_value)))))))
    (require (or (RegReg? mem) (RegScaled? mem))))

(spec
    (MInst.SLoad32 rd mem flags)
    (modifies isa_load)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 4)
                    (= (:addr isa_load) (bvadd rn rm))
                    (= rd (sign_ext 64 (conv_to 32 loaded_value)))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 4)
                    (=
                        (:addr isa_load)
                        (bvadd rn (concat (extract 61 0 rm) #b00)))
                    (= rd (sign_ext 64 (conv_to 32 loaded_value)))))))
    (require (or (RegReg? mem) (RegScaled? mem))))

(spec
    (MInst.ULoad64 rd mem flags)
    (modifies isa_load)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 8)
                    (= (:addr isa_load) (bvadd rn rm))
                    (= rd (conv_to 64 loaded_value))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_load) true)
                    (= (:size isa_load) 8)
                    (=
                        (:addr isa_load)
                        (bvadd rn (concat (extract 60 0 rm) #b000)))
                    (= rd (conv_to 64 loaded_value))))))
    (require (or (RegReg? mem) (RegScaled? mem))))
