fn fp_const_macro(name: &str, x32: f32, x64: f64, desc: &str) {
    println!(
        "
; Build {desc} as a floating-point of the given width.
(macro ({name} w)
    (conv_to w
        (switch w
            (32 #x{:016x})
            (64 #x{:016x})
       )
    )
)",
        x32.to_bits(),
        x64.to_bits()
    );
}

fn fp_const_macros(name: &str, x32: f32, x64: f64, desc: &str) {
    fp_const_macro(&format!("fp_{name}"), x32, x64, desc);
    fp_const_macro(
        &format!("fp_minus_{name}"),
        -x32,
        -x64,
        &format!("negative {desc}"),
    );
}

fn main() {
    println!(";; GENERATED BY `fpconst`. DO NOT EDIT!!!");

    fp_const_macros("one", 1.0, 1.0, "one");
    fp_const_macros("half", 0.5, 0.5, "half");
    fp_const_macros(
        "i32_min",
        i32::MIN as f32,
        i32::MIN as f64,
        "32-bit integer minimum",
    );
    fp_const_macros(
        "i64_min",
        i64::MIN as f32,
        i64::MIN as f64,
        "64-bit integer minimum",
    );
}
